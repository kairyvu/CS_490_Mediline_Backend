version: 2.1
orbs:
  python: circleci/python@2
jobs:
  build:
    docker:
      - image: cimg/python:3.12-node
    steps:
      - checkout
      - python/install-packages
      - run:
          name: Install dependencies
          command: |
            pip install -r requirements.txt
  lint:
    docker:
      - image: cimg/python:3.12-node
    steps:
      - checkout
      - python/install-packages
      - run:
          name: Install pylint
          command: pip install pylint
      - run:
          name: Run linters (pylint)
          command: pylint flaskr tests || true
  test:
    docker:
      - image: cimg/python:3.12-node
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /home/circleci/gcloud-key.json
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /home/circleci/gcloud-key.json
    steps:
      - checkout
      - python/install-packages
      - run:
          name: Set up Google Cloud credentials
          command: |
            echo "$GCLOUD_SERVICE_KEY" > /home/circleci/gcloud-key.json
            gcloud auth activate-service-account --key-file=/home/circleci/gcloud-key.json
            gcloud config set project $GCLOUD_PROJECT
      - run:
          name: Debug DEEPSEEK_API_KEY
          command: echo "Key set? ${DEEPSEEK_API_KEY:+yes}"
      - run:
          name: Run tests
          command: pytest --junitxml=junit.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
      - store_test_results:
          path: junit.xml
  build-docker-image:
    docker:
      - image: cimg/python:3.12-node
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image from Dockerfile
          command: docker build -t my-app:${CIRCLE_SHA1} .
      - run:
          name: Save Docker image
          command: docker save my-app:${CIRCLE_SHA1} -o my-app-image.tar
      - persist_to_workspace:
          root: .
          paths:
            - my-app-image.tar
  deploy:
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Load Docker image
          command: docker load -i my-app-image.tar
      - run:
          name: Set up Google Cloud credentials
          command: |
            echo "$GCLOUD_SERVICE_KEY" > /tmp/gcloud-key.json
            gcloud auth activate-service-account --key-file=/tmp/gcloud-key.json
            gcloud config set project $GCLOUD_PROJECT_ID
      - run:
          name: Deploy to Cloud Run
          command: |
            gcloud run deploy $CLOUDRUN_SERVICE \
              --image my-app:${CIRCLE_SHA1} \
              --region $CLOUDRUN_REGION \
              --platform managed \
              --allow-unauthenticated
workflows:
  build-and-test:
    when:
      or:
        - equal: [main, << pipeline.git.branch >>]
        - equal: [sandbox, << pipeline.git.branch >>]
        - equal: [circleci-project-setup, << pipeline.git.branch >>]
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - lint
      - build-docker-image:
          requires:
            - test
      - deploy:
          requires:
            - build-docker-image
          filters:
            branches:
              only: main
